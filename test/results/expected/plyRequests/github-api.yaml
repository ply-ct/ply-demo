repositoryTopics:
  request:
    url: https://api.github.com/repos/ply-ct/ply/topics
    method: GET
    headers:
      Accept: application/vnd.github.mercy-preview+json
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
    body: |-
      {
        "names": [
          "rest-api",
          "testing",
          "typescript",
          "nodejs",
          "test-automation",
          "continuous-testing",
          "graphql",
          "workflow"
        ]
      }
repositoryTopicsQuery:
  request:
    url: https://api.github.com/graphql
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      query {
        repository(owner: "ply-ct", name: "ply") {
          repositoryTopics(first: 10) {
            edges {
              node {
                topic {
                  name
                }
              }
            }
          }
        }
      }
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "repository": {
            "repositoryTopics": {
              "edges": [
                {
                  "node": {
                    "topic": {
                      "name": "rest-api"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "testing"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "typescript"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "nodejs"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "test-automation"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "continuous-testing"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "graphql"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "workflow"
                    }
                  }
                }
              ]
            }
          }
        }
      }
findRepositoryId:
  request:
    url: https://api.github.com/graphql
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      query findRepositoryId {
        repository(owner:"ply-ct", name:"ply") {
          id
        }
      }
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "repository": {
            "id": "MDEwOlJlcG9zaXRvcnkxMjk1NDk0ODk="
          }
        }
      }
starRepository:
  request:
    url: https://api.github.com/graphql
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      mutation starRepository {
        addStar(input:{starrableId:"MDEwOlJlcG9zaXRvcnkxMjk1NDk0ODk="}) {
          starrable {
            viewerHasStarred
          }
        }
      }
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "addStar": {
            "starrable": {
              "viewerHasStarred": true
            }
          }
        }
      }
