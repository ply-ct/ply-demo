Start:
  id: s1
  status: Completed
Repository Topics:
  id: s3
  request:
    url: 'https://api.github.com/graphql'
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      query {
        repository(owner: "ply-ct", name: "ply-demo") {
          repositoryTopics(first: 10) {
            edges {
              node {
                topic {
                  name
                }
              }
            }
          }
        }
      }
  response:  # 277 ms
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "repository": {
            "repositoryTopics": {
              "edges": [
                {
                  "node": {
                    "topic": {
                      "name": "rest-api"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "testing"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "ply"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "example-project"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "graphql"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "typescript"
                    }
                  }
                },
                {
                  "node": {
                    "topic": {
                      "name": "github-workflow"
                    }
                  }
                }
              ]
            }
          }
        }
      }
  status: Completed
Find Repository ID:
  id: s4
  request:
    url: 'https://api.github.com/graphql'
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      query findRepositoryId {
        repository(owner:"ply-ct", name:"ply-demo") {
          id
        }
      }
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "repository": {
            "id": "MDEwOlJlcG9zaXRvcnkxMjk1NTMyNDM="
          }
        }
      }
  status: Completed
Star Repository:
  id: s5
  request:
    url: 'https://api.github.com/graphql'
    method: POST
    headers:
      Content-Type: application/json
      User-Agent: ply-ct
    body: |-
      mutation starRepository {
        addStar(input:{starrableId:"${__ply_results.findRepositoryId.response.body.data.repository.id}"}) {
          starrable {
            viewerHasStarred
          }
        }
      }
  response:
    status:
      code: 200
      message: OK
    headers:
      content-type: application/json; charset=utf-8
      x-github-media-type: github.v4; format=json
    body: |-
      {
        "data": {
          "addStar": null
        },
        "errors": [
          {
            "locations": [
              {
                "column": 3,
                "line": 2
              }
            ],
            "message": "Could not resolve to a node with the global id of '${__ply_results.findRepositoryId.response.body.data.repository.id}'",
            "path": [
              "addStar"
            ],
            "type": "NOT_FOUND"
          }
        ]
      }
  status: Completed
Stop:
  id: s2
  status: Completed
